IntegrityError at /pricing/
UNIQUE constraint failed: payment_interest.id
Request Method:	POST
Request URL:	http://127.0.0.1:8000/pricing/
Django Version:	5.0.2
Exception Type:	IntegrityError
Exception Value:	
UNIQUE constraint failed: payment_interest.id
Exception Location:	C:\Development\Work\Provex\.venv\Lib\site-packages\django\db\backends\sqlite3\base.py, line 329, in execute
Raised during:	payment.views.pricing_view
Python Executable:	C:\Development\Work\Provex\.venv\Scripts\python.exe
Python Version:	3.11.6
Python Path:	
['C:\\Development\\Work\\Provex',
 'C:\\Users\\Billyjnr\\AppData\\Local\\Programs\\Python\\Python311\\python311.zip',
 'C:\\Users\\Billyjnr\\AppData\\Local\\Programs\\Python\\Python311\\DLLs',
 'C:\\Users\\Billyjnr\\AppData\\Local\\Programs\\Python\\Python311\\Lib',
 'C:\\Users\\Billyjnr\\AppData\\Local\\Programs\\Python\\Python311',
 'C:\\Development\\Work\\Provex\\.venv',
 'C:\\Development\\Work\\Provex\\.venv\\Lib\\site-packages']
Server time:	Sun, 11 Feb 2024 00:06:25 +0000
Traceback Switch to copy-and-paste view
C:\Development\Work\Provex\.venv\Lib\site-packages\django\db\models\query.py, line 948, in get_or_create
            return self.get(**kwargs), False
                        ^^^^^^^^^^^^^^^^^^ …
Local vars
C:\Development\Work\Provex\.venv\Lib\site-packages\django\db\models\query.py, line 649, in get
            raise self.model.DoesNotExist(
                 ^ …
Local vars
During handling of the above exception (Interest matching query does not exist.), another exception occurred:
C:\Development\Work\Provex\.venv\Lib\site-packages\django\db\backends\utils.py, line 105, in _execute
                return self.cursor.execute(sql, params)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ …
Local vars
C:\Development\Work\Provex\.venv\Lib\site-packages\django\db\backends\sqlite3\base.py, line 329, in execute
        return super().execute(query, params)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ …
Local vars
The above exception (UNIQUE constraint failed: payment_interest.id) was the direct cause of the following exception:
C:\Development\Work\Provex\.venv\Lib\site-packages\django\core\handlers\exception.py, line 55, in inner
                response = get_response(request)
                               ^^^^^^^^^^^^^^^^^^^^^ …
Local vars
C:\Development\Work\Provex\.venv\Lib\site-packages\django\core\handlers\base.py, line 197, in _get_response
                response = wrapped_callback(request, *callback_args, **callback_kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ …
Local vars
C:\Development\Work\Provex\payment\views.py, line 110, in pricing_view
        handle_investment_submission(request, plan_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ …
Local vars
C:\Development\Work\Provex\payment\views.py, line 94, in handle_investment_submission
        handle_standard_investment(request.user, amount, account_type)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ …
Local vars
C:\Development\Work\Provex\payment\utils2.py, line 32, in handle_standard_investment
        investment_plan = InvestmentPlan.objects.create(
                               …
Local vars
C:\Development\Work\Provex\.venv\Lib\site-packages\django\db\models\manager.py, line 87, in manager_method
                return getattr(self.get_queryset(), name)(*args, **kwargs)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ …
Local vars
C:\Development\Work\Provex\.venv\Lib\site-packages\django\db\models\query.py, line 679, in create
        obj.save(force_insert=True, using=self.db)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ …
Local vars
C:\Development\Work\Provex\payment\models.py, line 130, in save
        interest, created = Interest.objects.get_or_create(investment_plan=self)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ …
Local vars
C:\Development\Work\Provex\.venv\Lib\site-packages\django\db\models\manager.py, line 87, in manager_method
                return getattr(self.get_queryset(), name)(*args, **kwargs)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ …
Local vars
C:\Development\Work\Provex\.venv\Lib\site-packages\django\db\models\query.py, line 955, in get_or_create
                    return self.create(**params), True
                                ^^^^^^^^^^^^^^^^^^^^^ …
Local vars
C:\Development\Work\Provex\.venv\Lib\site-packages\django\db\models\query.py, line 679, in create
        obj.save(force_insert=True, using=self.db)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ …
Local vars
C:\Development\Work\Provex\payment\models.py, line 178, in save
            total_periods = duration // forty_eight_hours
            self.percentage_return = Decimal(str((elapsed_periods / total_periods) * self.investment_plan.roi_percentage))
            self.monetary_return = Decimal(str(self.investment_plan.amount)) * (self.percentage_return / Decimal('100.00'))
            self.total_amount = Decimal(str(self.investment_plan.amount)) + self.monetary_return
            # Save the changes
            super().save(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ …
            # Reset monetary_return to zero for the next 48-hour period
            self.monetary_return = Decimal('0.00')
            super().save(*args, **kwargs)
Local vars